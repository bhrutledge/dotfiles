#!/usr/bin/env bash
# Print a Markdown list of GitHub pull requests.
#
#    gh-pulls-md review-requested:@me user:EnergySage
#
# Based on https://github.com/pulls/review-requested and friends
# TODO: Decouple template

query_args="$*"
query="is:open is:pr archived:false sort:updated-desc $query_args"

# https://docs.github.com/en/graphql/reference/queries#searchresultitemconnection
# https://docs.github.com/en/graphql/reference/unions#searchresultitem
# https://docs.github.com/en/graphql/reference/objects#pullrequest
# https://docs.github.com/en/graphql/reference/objects#commit
query="
{
    search(query: \"$query\", type: ISSUE, last: 100) {
        nodes {
            ... on PullRequest {
                url
                title
                number
                author {
                    login
                }
                updatedAt
                mergeable
                commits(last: 1) {
                    nodes {
                        commit {
                            statusCheckRollup {
                                state
                            }
                        }
                    }
                }
                reviewDecision
            }
        }
    }
}
"

gh api graphql -f query="$query" |
    jq -r '
(
    .data.search.nodes[] |
    [
        "-",
        (.updatedAt | fromdate | strflocaltime("%m/%d")),
        (
            .reviewDecision // "" |
            if . == "APPROVED" then "‚úì" elif . == "CHANGES_REQUESTED" then "¬±" else "‚Ä¢" end
        ),
        (
            .commits.nodes[0].commit.statusCheckRollup.state // "" |
            if . == "SUCCESS" then "‚úì" elif (. | test("ERROR|FAILURE")) then "êÑÇ" else "‚Ä¢" end
        ),
        (
            .mergeable // "" |
            if . == "MERGEABLE" then "‚úì" elif . == "CONFLICTING" then "!" else "‚Ä¢" end
        ),
        "[\(.title) - \(.author.login)](\(.url))"
    ] |
    join(" ")
)
'
